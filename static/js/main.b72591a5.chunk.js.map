{"version":3,"sources":["components/Header.js","components/Pagination.js","context/AppReducer.js","context/GlobalState.js","components/Home.js","components/MovieControl.js","components/MovieCard.js","components/Watchlist.js","components/Watched.js","components/ResultCard.js","components/Add.js","components/Details.js","components/Favouritelist.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","Pagination","pages","setCurrentPage","currentMovies","results","numOfPages","i","push","useState","currentButton","setCurrentButton","useEffect","length","href","onClick","prev","map","page","index","state","action","type","watchlist","payload","filter","movie","id","watched","favouritelist","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","addFavouriteMovielist","removeMovieFromFavouritelist","children","Home","setResult","currentPage","moviesPerPage","useContext","fetch","process","then","res","json","data","errors","indexOfLastMovie","indexOfFirstMovie","slice","totalPagesNum","Math","ceil","class","src","poster_path","alt","overview","substring","release_date","MovieControl","MovieCard","title","Watchlist","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","favouritelistDisabled","disabled","Add","query","setQuery","onChange","e","preventDefault","target","placeholder","Details","useParams","result","error","setError","loading","setLoading","a","axios","get","fetchData","riginal_language","Favouritelist","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72591a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n           <div className='container'>\r\n               <div className='inner-content'>\r\n                 <div className='brand'>\r\n                     <Link to=\"/\">Movie App</Link>\r\n                 </div>\r\n\r\n                  <ul className='nav-links'>\r\n                     <li>\r\n                         <Link to=\"/\">Home </Link>\r\n                     </li>\r\n                     <li>\r\n                         <Link to=\"/watchlist\">Watchlist</Link>\r\n                     </li>\r\n                     <li>\r\n                         <Link to=\"/watched\">Watched </Link>\r\n                     </li>\r\n                     <li>\r\n                         <Link to=\"/favourites\">Favourite</Link>\r\n                     </li>\r\n                     <li>\r\n                         <Link to=\"/add\" className=\"btn\">Search..</Link>\r\n                     </li>\r\n                  </ul>\r\n\r\n               </div>\r\n           </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport {useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Pagination = ({pages, setCurrentPage, currentMovies, results}) => {\r\n\r\n    const numOfPages = [];\r\n\r\n    for (let i=1; i <= pages; i++) {\r\n        numOfPages.push(i);\r\n    }\r\n\r\n    const [currentButton, setCurrentButton] = useState(1);\r\n\r\n    useEffect(()=> {\r\n        setCurrentPage(currentButton)\r\n    }, [currentButton, setCurrentPage])\r\n\r\n    return (\r\n        <div className=\"clearfix\">\r\n        <div className=\"hint-text\">Showing <b>{currentMovies.length}</b> out of <b>{results.length}</b> entries</div>\r\n        <ul className=\"pagination justify-content-center\">\r\n            <li className={`${currentButton === 1 ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\r\n                onClick = { () => setCurrentButton((prev) => prev === 1 ? prev : prev - 1 )}\r\n            >Previous</a></li>\r\n            {\r\n                numOfPages.map((page, index) => {\r\n                    return (\r\n                        <li key={index} className={`${currentButton === page ? 'page-item active' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\r\n                            onClick = {() => setCurrentButton(page)}\r\n                        >{page}</a></li>\r\n                    )\r\n                    \r\n                })\r\n            }\r\n\r\n            <li className={`${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\r\n                onClick = { () => setCurrentButton((prev) => prev === numOfPages.length ? prev : prev + 1 )}\r\n            >Next</a></li>\r\n\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","export default (state,action) => {\r\n    switch(action.type){\r\n        case \"ADD_MOVIE_TO_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watchlist:[action.payload, ...state.watchlist],\r\n            }\r\n        case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n            return {\r\n               ...state,\r\n               watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\r\n            }\r\n            case \"ADD_MOVIE_TO_WATCHED\":\r\n                return {\r\n                   ...state,\r\n                   watchlist: state.watchlist.filter((movie) => movie.id !== action.payload.id),\r\n                   watched: [action.payload, ...state.watched]\r\n                };\r\n\r\n            case \"MOVE_TO_WATCHLIST\":\r\n            return {\r\n                ...state,\r\n                watched: state.watched.filter(movie => movie.id !== action.payload.id),\r\n                favouritelist: state.favouritelist.filter(movie => movie.id !== action.payload.id),\r\n                watchlist: [action.payload, ...state.watchlist]\r\n            }\r\n            \r\n            case \"REMOVE_FROM_WATCHED\":\r\n                return{\r\n                    ...state,\r\n                    watched: state.watched.filter(movie => movie.id !== action.payload)\r\n                }\r\n                case \"ADD_FAVOURITE_MOVIELIST\":\r\n                    return {\r\n                        ...state,\r\n                        watchlist: state.watchlist.filter((movie) => movie.id !== action.payload.id),\r\n                        favouritelist: [action.payload, ...state.favouritelist]\r\n                    }\r\n\r\n                    case \"REMOVE_MOVIE_FROM_FAVOURITELIST\":\r\n                        return{\r\n                            ...state,\r\n                            favouritelist: state.favouritelist.filter(movie => movie.id !== action.payload)\r\n                        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {createContext, useReducer, useEffect} from 'react'\r\nimport AppReducer from './AppReducer'\r\nconst initialState = {\r\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\r\n    watched: localStorage.getItem('wwatched') ? JSON.parse(localStorage.getItem('watched')) : [],\r\n    favouritelist: localStorage.getItem('favouritelist') ? JSON.parse(localStorage.getItem('favouritelist')) : []\r\n\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch]= useReducer(AppReducer,  initialState);\r\n     useEffect(()=> {\r\n         localStorage.setItem('watchlist', JSON.stringify(state.watchlist))\r\n         localStorage.setItem('watched', JSON.stringify(state.watched))\r\n         localStorage.setItem('favouritelist', JSON.stringify(state.favouritelist))\r\n        \r\n     }, [state])   \r\n\r\n    const addMovieToWatchlist = (movie) => {\r\n        dispatch({type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie})\r\n    }\r\n    const removeMovieFromWatchlist= (id) => {\r\n        dispatch({type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id});\r\n    }\r\n    const addMovieToWatched= (movie)=> {\r\n        dispatch({type:\"ADD_MOVIE_TO_WATCHED\", payload:movie})\r\n    }\r\n    const moveToWatchlist = (movie) => {\r\n        dispatch({type:\"MOVE_TO_WATCHLIST\", payload:movie})\r\n    }\r\n    const removeFromWatched = (id) => {\r\n        dispatch({type:\"REMOVE_FROM_WATCHED\", payload:id})\r\n    }\r\n\r\n    const addFavouriteMovielist= (movie) => {\r\n        dispatch({type:\"ADD_FAVOURITE_MOVIELIST\", payload:movie})\r\n    }\r\n    const removeMovieFromFavouritelist= (id) => {\r\n        dispatch({type: \"REMOVE_MOVIE_FROM_FAVOURITELIST\", payload: id});\r\n    }\r\n\r\n    return(\r\n\r\n        <GlobalContext.Provider value={{watchlist: state.watchlist, \r\n            watched: state.watched, favouritelist: state.favouritelist,\r\n         addMovieToWatchlist,\r\n         removeMovieFromWatchlist,\r\n         addMovieToWatched,\r\n         moveToWatchlist,\r\n         removeFromWatched,\r\n         addFavouriteMovielist,\r\n         removeMovieFromFavouritelist\r\n         }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport  Pagination from \"./Pagination\";\r\nimport {Link} from 'react-router-dom'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\n\r\nexport const Home = () => {\r\n\r\n  const [results, setResult] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [moviesPerPage] = useState(5)\r\n  const { addFavouriteMovielist, addMovieToWatchlist} = useContext (GlobalContext);\r\n \r\n  useEffect(()=>{\r\n\r\n           fetch(\r\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.REACT_APP_TMDB_KEY}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (!data.errors) {\r\n        setResult(data.results);\r\n      } else {\r\n        setResult([]);\r\n      }\r\n    });\r\n        \r\n\r\n  }, [])\r\n  \r\n    //  pagination kısmı\r\n    const indexOfLastMovie = currentPage * moviesPerPage;\r\n    const indexOfFirstMovie = indexOfLastMovie  - moviesPerPage;\r\n    const currentMovies = results.slice(indexOfFirstMovie, indexOfLastMovie);\r\n    const totalPagesNum = Math.ceil(results.length /moviesPerPage)\r\n\r\n \r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n      <div className=\"section\">\r\n        <div className=\"row py-lg-5 home\">\r\n          <div className=\"col-lg-6 col-md-8 mx-auto\">\r\n            <h1>The Most Popular Movies For This Week</h1>\r\n            <p className=\"lead text-muted\">\r\n              Create with TMDB Api. Please, don't forget check every week. So if\r\n              you want you can create watchlist or watchedlist or favouritelist.\r\n              Enjoy!\r\n            </p>\r\n          </div>\r\n          <div class=\"album py-5 bg-light\">\r\n            <div class=\"container\">\r\n              <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                {currentMovies.map((movie, index) => (\r\n                  <div class=\"col\">\r\n                    <div class=\"card shadow-sm\" key={index}>\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                        alt=\"poster\"\r\n                      />\r\n                      <div class=\"card-body\">\r\n                        <p class=\"card-text\">{movie.overview.substring(0,100) + \"...\"}</p>\r\n                     \r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                          <div class=\"btn-group\">\r\n                              <Link to={`/details/${movie.id}`}>                                 \r\n                               <button\r\n                              type=\"button\"\r\n                              class=\"btn btn-sm btn-outline-secondary\"\r\n                             \r\n                            >\r\n                              <i class=\"fas fa-info\"></i>\r\n                            </button>     \r\n                              </Link>   \r\n                             \r\n                            \r\n                              \r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn btn-sm btn-outline-secondary\"\r\n                          \r\n                              onClick={() => {addFavouriteMovielist(movie)}}\r\n                            >\r\n                              <i class=\"fas fa-heart\"></i>\r\n                            </button>\r\n\r\n\r\n\r\n                            <button\r\n                              type=\"button\"\r\n                              class=\"btn btn-sm btn-outline-secondary\"\r\n                              onClick={() => addMovieToWatchlist(movie)}\r\n                            >\r\n                              <i class=\"fas fa-plus\"></i>{\" \"}\r\n                            </button>\r\n                          </div>\r\n                          <small class=\"text-muted\">{movie.release_date}</small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Pagination  pages = {totalPagesNum} \r\n            setCurrentPage  =   {setCurrentPage}\r\n            currentMovies = {currentMovies} \r\n           results = {results} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\"\r\nexport const MovieControl = ({movie,type}) => {\r\n     \r\n    const {addMovieToWatchlist,removeMovieFromWatchlist, addMovieToWatched, moveToWatchlist, removeFromWatched,addFavouriteMovielist,removeMovieFromFavouritelist} = useContext (GlobalContext);\r\n     \r\n    return (\r\n        <div className='inner-card-controls'>\r\n            {\r\n                type === 'watchlist' && (\r\n\r\n                    <>\r\n                    <button className=\"ctrl-btn\"\r\n                     onClick={() => addMovieToWatched(movie)}>\r\n                        <i className=\"fa-fw far fa-eye\"></i>\r\n                         </button>\r\n\r\n\r\n                         <button className=\"ctrl-btn\"\r\n                     onClick={() => addFavouriteMovielist(movie)}>\r\n                       <i class=\"fas fa-heart\"></i>\r\n                         </button>\r\n\r\n                         \r\n                         <button className=\"ctrl-btn\"\r\n                         onClick={ () => removeMovieFromWatchlist(movie.id)}\r\n                         >\r\n                        <i className=\"fa-fw fa fa-times\"></i>\r\n                         </button>\r\n                    </>\r\n                )\r\n            }\r\n\r\n\r\n            {type=== 'watched' && (\r\n                <>\r\n                <button className=\"ctrl-btn\" onClick={ () => moveToWatchlist(movie)}>\r\n                    <i className=\"fa-fw far fa-eye-slash\">\r\n\r\n                    </i>\r\n                </button>\r\n\r\n                <button className=\"ctrl-btn\" onClick={() => removeFromWatched(movie.id)}>\r\n                    <i className=\"fa-fw fa fa-times\">\r\n\r\n                    </i>\r\n                </button>\r\n                \r\n                </>\r\n            )}\r\n\r\n\r\n                 {type=== 'favouritelist' && (\r\n                <>\r\n                <button className=\"ctrl-btn\" onClick={ () => moveToWatchlist(movie)}>\r\n                    <i className=\"fas fa-plus\">\r\n\r\n                    </i>\r\n                </button>\r\n\r\n                <button className=\"ctrl-btn\" onClick={() => removeMovieFromFavouritelist(movie.id)}>\r\n                    <i className=\"fa-fw fa fa-times\">\r\n\r\n                    </i>\r\n                </button>\r\n                \r\n                </>\r\n            )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {MovieControl} from './MovieControl'\r\nexport const MovieCard = ({movie,type}) => {\r\n    return (\r\n        <div className=\"movie-card\">\r\n            <div className=\"overlay\"></div>\r\n            {\r\n                 movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                    alt={`${movie.title} Poster `} />\r\n                 ): (\r\n                    <div className=\"filler-poster\"></div>\r\n                 )}\r\n                 <MovieControl type={type} movie={movie} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { MovieCard } from './MovieCard';\r\n\r\n\r\nexport const Watchlist = () => {\r\n\r\n    const { watchlist }= useContext(GlobalContext);\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\"> My Watchlist </h1>\r\n                  \r\n                  <span className=\"count-pill\">\r\n                    {watchlist.length} \r\n                     {watchlist.length ===1 ? \"Movie\" : \"Movies\"}\r\n                    \r\n                  </span>\r\n                 </div>  \r\n                  \r\n                  \r\n                   { watchlist.length > 0 ? (\r\n                   <div className=\"movie-grid\">\r\n                      {\r\n                      watchlist.map((movie) => ( <MovieCard movie={movie} type=\"watchlist\" />\r\n                        \r\n                        ))}\r\n                  </div>\r\n\r\n                   ): (\r\n                       <h2 className=\"no-movies\"> No movies in your list, add some please! </h2>\r\n                   )\r\n\r\n                   }\r\n                 \r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { MovieCard } from \"./MovieCard\";\r\n\r\nexport const Watched = () => {\r\n  const { watched } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"movie-page\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"heading\">Watched Movies</h1>\r\n\r\n          <span className=\"count-pill\">\r\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n\r\n        {watched.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watched.map((movie) => (\r\n              <MovieCard movie={movie} key={movie.id} type=\"watched\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\n\r\nexport const ResultCard = ({movie}) => {\r\n     \r\n    const {addMovieToWatchlist,addMovieToWatched, watchlist, watched, favouritelist, addFavouriteMovielist} = useContext(GlobalContext)\r\n\r\n    let storedMovie= watchlist.find(o => o.id === movie.id)\r\n    let storedMovieWatched= watched.find(o => o.id === movie.id)\r\n\r\n    const watchlistDisabled= storedMovie ? true\r\n    :storedMovieWatched \r\n    ? true\r\n    : false;\r\n    const watchedDisabled = storedMovieWatched ?  true: false\r\n\r\n    let storedFavourite= favouritelist.find(o=> o.id === movie.id)\r\n    const favouritelistDisabled= storedFavourite? true : false\r\n\r\n    return (\r\n        <div className='result-card'>\r\n            <div className='poster-wrapper'>\r\n               {\r\n                 movie.poster_path ? (\r\n                    <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                    alt={`${movie.title} Poster `} />\r\n                 ): (\r\n                  \r\n                    <div className=\"filler-poster\"></div>\r\n\r\n                 )}\r\n\r\n                <div className=\"info\">\r\n                 <div className=\"header\">\r\n                  <h3 className=\"title\">{movie.title} </h3>\r\n                  <h4 className='release-date'> \r\n                            {movie.release_date ?movie.release_date.substring(0,4) : '-' }\r\n                   </h4>\r\n              </div>\r\n                \r\n                <div className=\"controls\">\r\n                    <button className=\"btn\" \r\n                     disabled={watchlistDisabled}\r\n                      onClick={() => addMovieToWatchlist(movie)}\r\n                    >Add to Watchlist</button>\r\n\r\n                     <button className=\"btn\" \r\n                     disabled={watchedDisabled}\r\n                      onClick={() => addMovieToWatched(movie)}\r\n                    >Add to Watched</button>\r\n\r\n\r\n                         <button className=\"btn\" \r\n                     disabled={favouritelistDisabled}\r\n                      onClick={() => addFavouriteMovielist(movie)}\r\n                    >Add to Favourites</button>\r\n\r\n                </div>\r\n\r\n          </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {ResultCard} from \"./ResultCard\"\r\n\r\n\r\nexport const Add = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResult] = useState([]);\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setQuery(e.target.value);\r\n\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.errors) {\r\n          setResult(data.results);\r\n        } else {\r\n          setResult([]);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"container\">\r\n        <div className=\"add-content\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={onChange}\r\n              placeholder=\"Search for a movie\"\r\n            />\r\n          </div>\r\n\r\n          {results.length > 0 && (\r\n            <ul className=\"results\">\r\n              {results.map((movie) => (\r\n                <li key={movie.id}> \r\n                   <ResultCard movie={movie} />\r\n                 \r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n         \r\n        </div>\r\n                   \r\n        \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction Details() {\r\n  const { id } = useParams();\r\n  const [result, setResult] = useState();\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.get(\r\n          `https://api.themoviedb.org/3/movie/${id}?api_key=0eab07c6105c03164ace717da637b3ea&language=en-US`\r\n        );\r\n        setResult(res.data);\r\n        setLoading(false);\r\n      } catch {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [id]);\r\n  if (loading) return <p>Loading</p>;\r\n  if (error) return <p>Error</p>;\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div className=\"container mt-4\">\r\n             <div class=\"row mb-2\" key={result.id}>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\r\n          <div class=\"col-auto d-none d-lg-block\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200${result.poster_path}`}\r\n            alt=\"poster\"\r\n          />\r\n            </div>\r\n            <div class=\"col p-4 d-flex flex-column position-static\">\r\n              <strong class=\"d-inline-block mb-2 text-primary\">{result.riginal_language}</strong>\r\n              <h3 className=\"mb-0\"> {result.title} </h3>\r\n              <div class=\"mb-1 text-muted\">{result.release_date}</div>\r\n              <p class=\"card-text mb-auto\">\r\n                {result.overview}\r\n              </p>\r\n            \r\n            </div>\r\n        \r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      </div>\r\n   \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Details;\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { MovieCard } from './MovieCard';\r\n\r\n\r\nexport const Favouritelist = () => {\r\n\r\n    const { favouritelist }= useContext(GlobalContext);\r\n    return (\r\n        <div className=\"movie-page\">\r\n            <div className=\"container\">\r\n                <div className=\"header\">\r\n                    <h1 className=\"heading\"> My Watchlist </h1>              \r\n                 </div>  \r\n                  \r\n                  \r\n                   { favouritelist.length > 0 ? (\r\n                   <div className=\"movie-grid\">\r\n                      {\r\n                      favouritelist.map((movie) => ( <MovieCard movie={movie} type=\"favouritelist\" />\r\n                        \r\n                        ))}\r\n                  </div>\r\n\r\n                   ): (\r\n                       <h2 className=\"no-movies\"> No movies in your list, add some please! </h2>\r\n                   )\r\n\r\n                   }\r\n                 \r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./components/Home\";\nimport { Watchlist } from \"./components/Watchlist\";\nimport { Watched } from \"./components/Watched\";\nimport { Add } from \"./components/Add\";\nimport \"./App.css\";\nimport \"./lib/font-awesome/css/all.min.css\";\nimport {GlobalProvider} from './context/GlobalState'\nimport Details  from \"./components/Details\";\nimport { Favouritelist } from \"./components/Favouritelist\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n          <Router>\n        <Header />\n        <Routes>\n        <Route exact path=\"/\" element={ <Home />}></Route>\n        <Route  path=\"/details/:id\" element={ <Details />}></Route>\n          <Route  path=\"/watchlist\" element={ <Watchlist />}></Route>\n          <Route path=\"/add\" element={  <Add />}> </Route>\n          <Route path=\"/watched\"element={  <Watched />}></Route>\n          <Route path=\"/favourites\"element={  <Favouritelist />}></Route>\n\n        </Routes>\n      </Router>\n    </GlobalProvider>\n  \n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}